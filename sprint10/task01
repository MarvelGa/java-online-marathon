
import java.util.ArrayList;
import java.util.List;
import java.sql.*;

public class MyUtils {
	private Connection connection;
	private Statement statement;
	private String schemaName;

    public Connection createConnection() throws SQLException {
    	DriverManager.registerDriver(new org.h2.Driver());
		connection = DriverManager.getConnection("jdbc:h2:mem:test", "", "");
		this.connection = connection;
		return connection;
    }
      

  public void closeConnection() {
        try {
            if (connection != null) {
             connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public Statement createStatement() throws SQLException {
        Statement statement = connection.createStatement();
         this.statement=statement;
        return statement;
    }

    public void closeStatement() throws SQLException {
        statement.close();
    }

    public void createSchema(String schemaName) throws SQLException {
        this.schemaName = schemaName;
        String sql = "CREATE SCHEMA IF NOT EXISTS " + schemaName;
        statement.execute(sql);
    }

    public void dropSchema() throws SQLException {
        String sql = "DROP SCHEMA " + this.schemaName;
        statement.execute(sql);
    }

    public void useSchema() throws SQLException {
        String sql = "USE " + this.schemaName;
        statement.execute(sql);
    }

    public void createTableRoles() throws SQLException {
        String sql = "CREATE TABLE `roles` ( `id` INT PRIMARY KEY AUTO_INCREMENT, roleName varchar(255) not null)";
         statement.execute(sql);
    }

    public void createTableDirections() throws SQLException {
        String sql = "CREATE TABLE `directions`\n" +
                "(\n" +
                "    `id` INT PRIMARY KEY AUTO_INCREMENT,\n" +
                "    directionName varchar(255) not null\n" +
                ")";
        statement.execute(sql);
    }

    public void createTableProjects() throws SQLException {
        String sql = "CREATE TABLE `projects`\n" +
                "(\n" +
                "    `id` INT PRIMARY KEY AUTO_INCREMENT,\n" +
                "    projectName varchar(255) not null,\n" +
                "    directionId int not null,\n" +
                "    constraint FK_direction_id\n" +
                "        foreign key (directionId)\n" +
                "            references directions(id) ON DELETE CASCADE\n" +
                ")";
        statement.execute(sql);
    }

    public void createTableEmployee() throws SQLException {
        String sql = "CREATE TABLE `employee`\n" +
                "(\n" +
                "    `id` INT PRIMARY KEY AUTO_INCREMENT,\n" +
                "    firstName varchar(255) not null,\n" +
                "    roleId int not null,\n" +
                "    projectId int not null,\n" +
                "    constraint FK_role_id\n" +
                "        foreign key (roleId)\n" +
                "            references roles(id) ON DELETE CASCADE,\n" +
                "    constraint FK_project_id\n" +
                "        foreign key (projectId)\n" +
                "            references projects(id) ON DELETE CASCADE\n" +
                ")";
        statement.execute(sql);
    }

    public void dropTable(String tableName) throws SQLException {
        String sql = "DROP TABLE IF EXISTS " + tableName;
        statement.execute(sql);

    }

    public void insertTableRoles(String roleName) throws SQLException {
         String sql = "INSERT INTO `roles` (`roleName`) VALUES (" + roleName + ")";
        statement.execute(sql);

    }

    public void insertTableDirections(String directionName) throws SQLException {

       String sql = "INSERT INTO `Directions` (`directionName`) VALUES (" + directionName + ")";
        statement.execute(sql);

    }

    public void insertTableProjects(String projectName, String directionName) throws SQLException {
        String sql = "INSERT INTO `projects` (`projectName`, `directionId`) VALUES (" + projectName + ", " + directionName +")";
        statement.executeQuery(sql);
    }

    public void insertTableEmployee(String firstName, String roleName, String projectName) throws SQLException {
        String sql = "INSERT INTO `employee` (`firstName`, `roleId`, `projectId`) VALUES (" + firstName + ", " + roleName + " ," + projectName+ ")";
        statement.executeQuery(sql);
    }

    public int getRoleId(String roleName) throws SQLException {
        int roleId = 0;
        String sql = "SELECT `id` FROM `Roles` r WHERE r.roleName=" + '"' + roleName + '"';
        ResultSet resultSet = statement.executeQuery(sql);
        while (resultSet.next()) {
            roleId = resultSet.getInt("id");
        }
        return roleId;
    }

    public int getDirectionId(String directionName) throws SQLException {
        int directionId = 0;
        String sql = "SELECT `id` FROM `directions` d WHERE d.directionName=" + '"' + directionName + '"' ;
        ResultSet resultSet = statement.executeQuery(sql);
        while (resultSet.next()) {
            directionId = resultSet.getInt("id");
        }
        return directionId;
    }

    public int getProjectId(String projectName) throws SQLException {
        int roleId = 0;
        String sql = "SELECT `id` FROM `projects` d WHERE d.projectName=" + '"' + projectName + '"';
        ResultSet resultSet = statement.executeQuery(sql);
        while (resultSet.next()) {
            projectId = resultSet.getInt("id");
        }
        return projectId;
    }

    public int getEmployeeId(String firstName) throws SQLException {
        int employeeId = 0;
        String sql = "SELECT `id` FROM `employee` d WHERE d.firstName=" + '"' + firstName + '"';
        ResultSet resultSet = statement.executeQuery(sql);
        while (resultSet.next()) {
            employeeId = resultSet.getInt("id");
        }
        return employeeId;
    }

    public List<String> getAllRoles() throws SQLException {
        String sql = "SELECT * FROM `roles`";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String roleName = resultSet.getString("roleName");
            list.add(roleName);
        }
        return list;
    }

    public List<String> getAllDirestion() throws SQLException {
        String sql = "SELECT * FROM `directions`";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String directionName = resultSet.getString("directionName");
            list.add(directionName);
        }
        return list;
    }

    public List<String> getAllProjects() throws SQLException {
        String sql = "SELECT * FROM `projects`";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String projectName = resultSet.getString("projectName");
            list.add(projectName);
        }
        return list;
    }

    public List<String> getAllEmployee() throws SQLException {
        String sql = "SELECT * FROM `employee`";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String firstName = resultSet.getString("firstName");
            list.add(firstName);
        }
        return list;
    }

    public List<String> getAllDevelopers() throws SQLException {
        String sql = "SELECT `firstName` FROM `employee` e JOIN `roles` r ON e.roleId = r.id WHERE r.roleName =\"Developer\" ";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String firstName = resultSet.getString("firstName");
            list.add(firstName);
        }
        return list;
    }

    public List<String> getAllJavaProjects() throws SQLException {
        String sql = "SELECT `projectName` FROM `Projects` p JOIN Directions d ON  p.directionId=d.id WHERE d.directionName=\"Java\" ";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String firstName = resultSet.getString("projectName");
            list.add(firstName);
        }
        return list;
    }

    public List<String> getAllJavaDevelopers() throws SQLException {
        String sql = "SELECT firstName FROM `employee` e \n" +
                "JOIN roles r ON e.roleId = r.id \n" +
                "JOIN projects p ON e.projectId =p.id\n" +
                "JOIN directions d ON p.directionId=d.id \n" +
                "WHERE r.roleName =\"Developer\" AND d.directionName =\"Java\"";
        ResultSet resultSet = statement.executeQuery(sql);
        List<String> list = new ArrayList<>();
        while (resultSet.next()) {
            String firstName = resultSet.getString("firstName");
            list.add(firstName);
        }
        return list;

    }

}
